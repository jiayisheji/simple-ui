@import './input-variables';

$sim-input: unquote(sim-input);

/// 注册组件
@include sim-register-component($sim-input);

/// 主题风格
@mixin sim-input-theme($config-or-theme) {
  @include sim-check-component-theme($config-or-theme, $sim-input) {
    $color: sim-get-color-config($config-or-theme);
    $density: sim-get-density-config($config-or-theme);
    $typography: sim-get-typography-config($config-or-theme);

    @if $color != null {
      @include sim-input-color($color);
    }
    @if $density != null {
      @include sim-input-density($density);
    }
    @if $typography != null {
      @include sim-input-typography($typography);
    }
  }
}

/// 主题颜色配置
@mixin sim-input-color($config-or-theme) {
  $config: sim-get-color-config($config-or-theme);
  $background: map-get($config, background);
  $foreground: map-get($config, foreground);
  $is-dark: map-get($config, is-dark);

  .sim-input:read-only {
    color: sim-color($foreground, secondary-text);
    background-color: sim-color($foreground, divider);
  }
}

/// 字体排版配置
@mixin sim-input-typography($config-or-theme) {
  $config: sim-get-typography-config($config-or-theme);
}

/// 密度配置
@mixin sim-input-density($config-or-theme) {
  $density-scale: sim-get-density-config($config-or-theme);

  input.sim-input {
    @each $size, $scale in (small: minimum, medium: $density-scale, large: maximum) {
      &.sim-#{$size} {
        height: sim-density-prop-value($sim-input-density-config, $scale, height);
        font-size: sim-density-prop-value($sim-input-density-config, $scale, font-size);
        line-height: sim-density-prop-value($sim-input-density-config, $scale, height);
      }
    }
  }
}
