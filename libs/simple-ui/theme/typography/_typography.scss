@import './typography-utils';

// 默认字体
$sim-font-family: -apple-system, 'Blinkmacsystemfont', 'Segoe UI', 'Roboto', 'Helvetica Neue', 'Arial', 'Noto Sans', sans-serif,
  'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';
// 默认代码字体
$sim-code-family: 'SFMono-Regular', 'Consolas', 'Liberation Mono', 'Menlo', 'Courier', monospace;

// 表示来自设计规范的排版级别
@function sim-typography-level($font-size, $line-height: $font-size, $font-weight: 400, $font-family: null, $letter-spacing: null) {
  @return (
    font-size: $font-size,
    line-height: $line-height,
    font-weight: $font-weight,
    font-family: $font-family,
    letter-spacing: $letter-spacing
  );
}

// 表示版式层次的集合
// 注意:规范中没有提到字母间距
// 行高必须是字体大小的无单元部分
@function sim-typography-config(
  $font-family: $sim-font-family,
  $display4: sim-typography-level(56px, 1.14, 300, $letter-spacing: -0.05em),
  $display3: sim-typography-level(46px, 1.17, 400, $letter-spacing: -0.02em),
  $display2: sim-typography-level(38px, 1.21, 400, $letter-spacing: -0.005em),
  $display1: sim-typography-level(30px, 1.26, 400),
  $headline: sim-typography-level(24px, 1.33, 400),
  $title: sim-typography-level(20px, 1.4, 500),
  $subheading: sim-typography-level(16px, 1.5, 400),
  $subtitle: sim-typography-level(14px, 1.57, 400),
  $body2: sim-typography-level(14px, 1.57, 500),
  $body1: sim-typography-level(14px, 1.57, 400),
  $button: sim-typography-level(14px, 1.57, 500),
  $caption: sim-typography-level(12px, 1.125, 400),
  $overline: sim-typography-level(inherit, 1.125, 400)
) {
  $config: (
    display4: $display4,
    display3: $display3,
    display2: $display2,
    display1: $display1,
    headline: $headline,
    title: $title,
    subheading: $subheading,
    subtitle: $subtitle,
    body2: $body2,
    body1: $body1,
    button: $button,
    caption: $caption,
    overline: $overline
  );

  // 循环遍历所有级别，并将没有字体的字体家族设置为基础。
  // 请注意，Sass不能修改现有的映射，这意味着我们需要合并和重新分配
  @each $key, $level in $config {
    @if map-get($level, font-family) == null {
      $new-level: map-merge(
        $level,
        (
          font-family: $font-family
        )
      );
      $config: map-merge(
        $config,
        (
          $key: $new-level
        )
      );
    }
  }

  // 将基本字体系列添加到配置中
  @return map-merge(
    $config,
    (
      font-family: $font-family
    )
  );
}

// 根据配置添加基本的字体样式
@mixin sim-base-typography($config, $selector: '.sim-typography') {
  .sim-h1,
  .sim-headline,
  #{$selector} h1 {
    @include sim-typography-level-to-styles($config, headline);

    margin: 0 0 16px;
  }

  .sim-h2,
  .sim-title,
  #{$selector} h2 {
    @include sim-typography-level-to-styles($config, title);

    margin: 0 0 16px;
  }

  .sim-h3,
  .sim-subheading,
  #{$selector} h3 {
    @include sim-typography-level-to-styles($config, subheading);

    margin: 0 0 16px;
  }

  .sim-h4,
  .sim-subtitle,
  #{$selector} h4 {
    @include sim-typography-level-to-styles($config, subtitle);

    margin: 0 0 16px;
  }

  // 注意：规范中没有与h5和h6相对应的任何内容，但是为了保持一致性，我们添加了这些内容。
  // 字体大小来自Chrome用户代理样式，h5为0.83em，h6为0.67em。
  .sim-h5,
  #{$selector} h5 {
    @include sim-typography-font-shorthand(
      // 这里使用calc来支持css变量
        calc(#{sim-font-size($config, body1)} * 0.83),
      sim-font-weight($config, body1),
      sim-line-height($config, body1),
      sim-font-family($config, body1)
    );

    margin: 0 0 12px;
  }

  .sim-h6,
  #{$selector} h6 {
    @include sim-typography-font-shorthand(
      // 这里使用calc来支持css变量
        calc(#{sim-font-size($config, body1)} * 0.67),
      sim-font-weight($config, body1),
      sim-line-height($config, body1),
      sim-font-family($config, body1)
    );

    margin: 0 0 12px;
  }

  .sim-body-strong,
  .sim-body2 {
    @include sim-typography-level-to-styles($config, body2);
  }

  .sim-body,
  .sim-body1,
  #{$selector} {
    @include sim-typography-level-to-styles($config, body1);

    p {
      margin: 0 0 12px;
    }
  }

  .sim-small,
  .sim-caption {
    @include sim-typography-level-to-styles($config, caption);
  }

  .sim-overline {
    @include sim-typography-level-to-styles($config, overline);
  }

  .sim-display4,
  #{$selector} .sim-display4 {
    @include sim-typography-level-to-styles($config, display4);

    margin: 0 0 56px;
  }

  .sim-display3,
  #{$selector} .sim-display3 {
    @include sim-typography-level-to-styles($config, display3);

    margin: 0 0 64px;
  }

  .sim-display2,
  #{$selector} .sim-display2 {
    @include sim-typography-level-to-styles($config, display2);

    margin: 0 0 64px;
  }

  .sim-display1,
  #{$selector} .sim-display1 {
    @include sim-typography-level-to-styles($config, display1);

    margin: 0 0 64px;
  }
}
